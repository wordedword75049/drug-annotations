"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importStar(require("react"));
var classnames_1 = __importDefault(require("classnames"));
var isEmpty_1 = __importDefault(require("lodash/isEmpty"));
var isEqual_1 = __importDefault(require("lodash/isEqual"));
var Menu_1 = __importDefault(require("../Menu"));
require("./Select.scss");
var Select = (function (_super) {
    __extends(Select, _super);
    function Select() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            selectedOption: _this.props.options.find(function (option) { return option.value === _this.props.value; }) || {
                label: '',
                value: _this.props.value || ''
            },
            selectedIdx: _this.props.options.findIndex(function (option) { return option.value === _this.props.value; }),
            isFocused: false
        };
        _this.defineSelectedOption = function () {
            var _a = _this.props, options = _a.options, value = _a.value;
            var selectedOption = options.find(function (option) { return option.value === value; }) || {
                label: '',
                value: ''
            };
            var selectedIdx = options.findIndex(function (option) { return option.value === value; });
            _this.setState({ selectedOption: selectedOption, selectedIdx: selectedIdx });
        };
        _this.onFocus = function () {
            _this.setState({ isFocused: true });
        };
        _this.onBlur = function () {
            _this.setState({ isFocused: false });
        };
        _this.onChange = function (value, selectedIdx) {
            var _a;
            var _b = _this.props, name = _b.name, options = _b.options, onChange = _b.onChange, isCleanedValue = _b.isCleanedValue;
            var selectedOption = _this.state.selectedOption;
            var sendValue = function () {
                onChange({ name: name, value: value });
                document.activeElement.blur();
                _this.setState({ isFocused: false });
            };
            return isCleanedValue
                ? sendValue()
                : _this.setState({
                    selectedOption: (_a = options.find(function (option) { return option.value === value; }), (_a !== null && _a !== void 0 ? _a : selectedOption)),
                    selectedIdx: selectedIdx,
                    isFocused: false
                }, function () { return sendValue(); });
        };
        return _this;
    }
    Select.prototype.componentDidUpdate = function (prevProps) {
        var _a = this.props, options = _a.options, value = _a.value;
        if (!isEqual_1.default(options, prevProps.options) || !isEqual_1.default(value, prevProps.value))
            this.defineSelectedOption();
    };
    Select.prototype.render = function () {
        var _a;
        var _b = this.props, className = _b.className, options = _b.options, placeholder = _b.placeholder, disabled = _b.disabled, fullWidth = _b.fullWidth;
        var _c = this.state, selectedOption = _c.selectedOption, selectedIdx = _c.selectedIdx, isFocused = _c.isFocused;
        var isDisabled = isEmpty_1.default(options) || disabled;
        var selectClasses = classnames_1.default((_a = {
                'bg-select__head': true,
                'bg-select__head--active': isFocused,
                'bg-select__head--disabled': isDisabled,
                'bg-select__head--full-width': fullWidth
            },
            _a[className] = className,
            _a));
        return (react_1.default.createElement("div", { className: "bg-select", onFocus: this.onFocus, onBlur: this.onBlur },
            react_1.default.createElement("button", { type: "button", className: selectClasses, onClick: this.onFocus, disabled: isDisabled },
                react_1.default.createElement("div", { className: "bg-select__value" }, selectedOption.label || placeholder),
                react_1.default.createElement("svg", { xmlns: "http://www.w3.org/2000/svg", width: "8", height: "5", viewBox: "0 0 8 5", className: "bg-select__head-toggler" },
                    react_1.default.createElement("g", { fill: "none", fillRule: "evenodd" },
                        react_1.default.createElement("path", { d: "M-8-10h24v24H-8z" }),
                        react_1.default.createElement("path", { className: "bg-select__head-toggler-arrow", d: "M4.007 2.717l2.45-2.45a.913.913 0 1 1 1.29 1.29L4.691 4.615a.91.91 0 0 1-.684.266.91.91 0 0 1-.684-.266L.267 1.558a.913.913 0 0 1 1.29-1.29l2.45 2.449z" })))),
            isFocused && (react_1.default.createElement("div", { className: "bg-select__popup" },
                react_1.default.createElement(Menu_1.default, { options: options, selectedIdx: selectedIdx, isUsedInSelect: true, hasTitleAttribute: fullWidth, onChange: this.onChange })))));
    };
    Select.defaultProps = {
        placeholder: '',
        className: '',
        value: '',
        fullWidth: false,
        isCleanedValue: false,
        disabled: false
    };
    return Select;
}(react_1.PureComponent));
exports.default = Select;
