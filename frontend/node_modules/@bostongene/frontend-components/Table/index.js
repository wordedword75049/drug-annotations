"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importStar(require("react"));
var classnames_1 = __importDefault(require("classnames"));
var get_1 = __importDefault(require("lodash/get"));
var isEmpty_1 = __importDefault(require("lodash/isEmpty"));
require("flexboxgrid2/flexboxgrid2.css");
require("./Table.scss");
var renderRow = function (_a) {
    var _b;
    var item = _a.item, itemSchema = _a.itemSchema, itemKey = _a.itemKey, className = _a.className, rowHeightSize = _a.rowHeightSize;
    var itemClasses = classnames_1.default((_b = {
            'bg-table__item': true,
            'bg-table__item--small': rowHeightSize === 'small'
        },
        _b[className] = className,
        _b));
    return (react_1.default.createElement("div", { key: item[itemKey], className: itemClasses },
        react_1.default.createElement("div", { className: "row" }, itemSchema.map(function (field) { return (react_1.default.createElement("div", { key: field.name.toString(), className: field.className || 'col-xs-1' },
            !isEmpty_1.default(field.attributes) &&
                field.attributes.map(function (attr) { return (react_1.default.createElement("div", { key: attr, className: "bg-table__attribute" }, get_1.default(item, attr, ''))); }),
            field.template &&
                field.template(item))); }))));
};
var Table = (function (_super) {
    __extends(Table, _super);
    function Table() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Table.prototype.render = function () {
        var _a;
        var _b = this.props, schema = _b.schema, placeholder = _b.placeholder, className = _b.className, itemKey = _b.itemKey, rowHeightSize = _b.rowHeightSize, items = _b.items, children = _b.children;
        var tableClasses = classnames_1.default((_a = {
                'bg-table': true
            },
            _a[className] = className,
            _a));
        return (react_1.default.createElement("div", { className: tableClasses },
            react_1.default.createElement("div", { className: "bg-table__header" },
                react_1.default.createElement("div", { className: "row" }, schema.map(function (field) { return (react_1.default.createElement("div", { key: field.name.toString(), className: field.className || 'col-xs-1' }, field.headerTemplate ? (field.headerTemplate(field)) : (react_1.default.createElement("span", { className: "bg-table__header-title" }, field.name)))); }))),
            isEmpty_1.default(items) && react_1.default.createElement("div", { className: "bg-table__placeholder" }, placeholder),
            react_1.default.createElement("div", { className: "bg-table__items" }, items.map(function (item) {
                return children
                    ? children(item, schema, renderRow)
                    : renderRow({
                        item: item,
                        className: '',
                        itemSchema: schema,
                        itemKey: itemKey,
                        rowHeightSize: rowHeightSize
                    });
            }))));
    };
    Table.defaultProps = {
        placeholder: 'No records',
        className: '',
        rowHeightSize: '',
        children: undefined,
        itemKey: 'id'
    };
    return Table;
}(react_1.PureComponent));
exports.default = Table;
